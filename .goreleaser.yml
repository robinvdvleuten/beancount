version: 2

before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    ldflags: -s -w -X main.Version={{ .Version }} -X main.CommitSHA={{ .ShortCommit }}
    goos:
      - linux
      - windows
      - darwin
    binary: beancount
    dir: ./cmd/beancount

archives:
  - formats: [tar.gz]
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: [zip]
    files:
      - COPYING
      - README*
gomod:
  proxy: true

signs:
  - artifacts: checksum

nfpms:
  - vendor: robinvdvleuten
    homepage: https://github.com/robinvdvleuten/beancount
    maintainer: Robin van der Vleuten <robin@webstronauts.com>
    description: A fast, lightweight Beancount parser and formatter written in Go
    license: GPL-2.0
    formats:
      - deb
      - rpm
      - apk
    bindir: /usr/bin

homebrew_casks:
  - repository:
      owner: robinvdvleuten
      name: homebrew-tap
    binary: beancount
    hooks:
      post:
        install: |
          if OS.mac?
            system_command "/usr/bin/xattr",
              args: ["-dr", "com.apple.quarantine", "#{staged_path}/beancount"]
          end
    commit_author:
      name: "Robin van der Vleuten"
      email: "robin@webstronauts.com"
    homepage: "https://github.com/robinvdvleuten/beancount"
    description: "A fast, lightweight Beancount parser and formatter written in Go"
    skip_upload: auto

checksum:
  name_template: "checksums.txt"

changelog:
  use: github
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
      - "^ci:"
      - "^style:"
      - "^build:"
      - "Merge"
  groups:
    - title: "⚠️ Breaking Changes"
      regexp: "^.*!(\\([[:word:]]+\\))?:.+$"
      order: 0
    - title: "Added"
      # Maps feat: commits to "Added"
      regexp: "^.*?feat(\\([[:word:]]+\\))?:.+$"
      order: 1
    - title: "Fixed"
      # Maps fix: commits to "Fixed"
      regexp: "^.*?fix(\\([[:word:]]+\\))?:.+$"
      order: 2
    - title: "Changed"
      # Maps refactor: and perf: to "Changed"
      regexp: "^.*?(refactor|perf)(\\([[:word:]]+\\))?:.+$"
      order: 3
    - title: "Security"
      # Security-related commits (use in scope or description)
      regexp: ".*security.*"
      order: 4
    - title: "Other Changes"
      order: 999
